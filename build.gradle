buildscript {
    ext.kotlin_version = '1.7.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.0-SNAPSHOT" apply false
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.21'

}
apply plugin: 'kotlin'

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: 'kotlin'
    loom {
        silentMojangMappingsLicense()
    }
    configurations {
        includeImplementation
        include.extendsFrom includeImplementation
        implementation.extendsFrom includeImplementation
    }
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered(){
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.06@zip")
        }
        includeImplementation( 'com.squareup.okhttp3:okhttp:4.10.0' )
        includeImplementation( 'com.squareup.okio:okio:3.0.0' )
        includeImplementation( 'com.squareup.okio:okio-jvm:3.0.0' )
        includeImplementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1')
        //7z-LZMA de/compression library （apache commons compression uses it）
        includeImplementation 'org.tukaani:xz:1.9'
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4')
        implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4')
        implementation 'org.xerial:sqlite-jdbc:3.39.4.0'
        includeImplementation 'org.xerial:sqlite-jdbc:3.39.4.0'
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.19.2+build.3:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
